<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://jasonthai.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jasonthai.me/" rel="alternate" type="text/html" /><updated>2020-05-11T15:55:23+00:00</updated><id>https://jasonthai.me/feed.xml</id><title type="html">Jason’s Notes</title><subtitle>Jason Thai's personal page</subtitle><author><name>Jason Thai</name></author><entry><title type="html">How to Setup Wireguard + Pi-hole on Debian 10 / Ubuntu 18.04</title><link href="https://jasonthai.me/blog/2020/05/01/how-to-setup-wireguard-pi-hole-on-debian-10-ubuntu-1804/" rel="alternate" type="text/html" title="How to Setup Wireguard + Pi-hole on Debian 10 / Ubuntu 18.04" /><published>2020-05-01T00:00:00+00:00</published><updated>2020-05-01T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/05/01/how-to-setup-wireguard-pi-hole-on-debian-10-ubuntu-1804</id><content type="html" xml:base="https://jasonthai.me/blog/2020/05/01/how-to-setup-wireguard-pi-hole-on-debian-10-ubuntu-1804/">&lt;blockquote&gt;
  &lt;p&gt;WireGuard® is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.
&lt;a href=&quot;https://www.wireguard.com/&quot;&gt;https://www.wireguard.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Follow up for my post &lt;a href=&quot;https://jasonthai.me/blog/2019/08/25/how-to-host-openvpn-and-pi-hole-on-ubuntu-1804-vps/&quot;&gt;How to host OpenVPN and Pi-hole on Ubuntu 18.04 VPS&lt;/a&gt;. This is a guide to set up wireguard + pi-hole for your own private ad blocking VPN.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;h3 id=&quot;wireguard-setup&quot;&gt;Wireguard Setup&lt;/h3&gt;
&lt;p&gt;Run these scripts:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://git.io/wireguard &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; wireguard-install.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash wireguard-install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Follow this setup:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to this WireGuard road warrior installer!

I need to ask you a few questions before starting setup.
You can use the default options and just press enter &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;you are ok with them.

What IPv4 address should the WireGuard server use?
     1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Your IPv4 address should show up here
     2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; other &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;IP
IPv4 address &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]: 1

What port &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;you want WireGuard listening to?
Port &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;51820]: 51820

Tell me a name &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the first client.
Client name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;client]: client

Which DNS &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;you want to use &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this client?
   1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Current system resolvers
   2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1.1.1.1
   3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Google
   4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; OpenDNS
   5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NTT
   6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AdGuard
DNS &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]: 2

We are ready to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up your WireGuard server now.

Press any key to &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;start-wireguard&quot;&gt;Start Wireguard&lt;/h3&gt;
&lt;p&gt;Wireguard should start automatically after you ran the script. If not you can check by&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status wg-quick@wg0.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Restart Wireguard services:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl restart wg-quick@wg0.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pi-hole-setup&quot;&gt;Pi-hole Setup&lt;/h3&gt;
&lt;p&gt;Note down  Wireguard’s IP:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip a show dev wg0
10.7.0.1/24 // note this address
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note down your default  gateway IP address:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip r | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;default
default via XXX.XXX.XXX.XXX dev eth0 onlink // note this address
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run this script:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-sSL&lt;/span&gt; https://install.pi-hole.net | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Follow the instruction to set up pi-hole:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Installing dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-1.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-1.png&quot; alt=&quot;step 1&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;The following step is important, make sure to select &lt;code class=&quot;highlighter-rouge&quot;&gt;wg0&lt;/code&gt; as the interface&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-2.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-2.png&quot; alt=&quot;step 2&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;Choose the DNS provider Pi-hole will use.&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-3.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-3.png&quot; alt=&quot;step 3&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;Choose the protocols available to you&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-4.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-4.png&quot; alt=&quot;step 4&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;This following step is important, make sure to choose &lt;code class=&quot;highlighter-rouge&quot;&gt;no&lt;/code&gt; so we can assign our internal address which is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.7.0.1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-5.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-5.png&quot; alt=&quot;step 5&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;Enter &lt;code class=&quot;highlighter-rouge&quot;&gt;10.7.0.1/24&lt;/code&gt;. This is the static address VPN will use to talk to Pi-hole&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-6.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-6.png&quot; alt=&quot;step 6&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;Enter the ipv4-gateway you noted down&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pihole-wireguard-7.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pihole-wireguard-7.png&quot; alt=&quot;step 7&quot; /&gt;
&lt;/picture&gt;

&lt;ul&gt;
  &lt;li&gt;There are a few more steps but I just choose the default settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test-dns-settings&quot;&gt;Test DNS settings&lt;/h3&gt;
&lt;p&gt;Run this script&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;host google.com 10.7.0.1

&lt;span class=&quot;c&quot;&gt;# Output from host google.com 10.7.0.1&lt;/span&gt;
google.com has address 172.217.0.46
google.com has IPv6 address 2607:f8b0:4005:80b::200e
google.com mail is handled by 10 aspmx.l.google.com.
google.com mail is handled by 20 alt1.aspmx.l.google.com.
google.com mail is handled by 30 alt2.aspmx.l.google.com.
google.com mail is handled by 40 alt3.aspmx.l.google.com.
google.com mail is handled by 50 alt4.aspmx.l.google.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Our Wireguard + Pi-hole still see google.com’s public IPs properly&lt;/p&gt;

&lt;p&gt;This time run&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;host pagead2.googlesyndication.com

&lt;span class=&quot;c&quot;&gt;# Output from host pagead2.googlesyndication.com&lt;/span&gt;
pagead2.googlesyndication.com has address 0.0.0.0
pagead2.googlesyndication.com has IPv6 address ::
pagead2.googlesyndication.com is an &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;pagead46.l.doubleclick.net.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pi-hole blocked &lt;code class=&quot;highlighter-rouge&quot;&gt;pagead2.googlesyndication.com&lt;/code&gt; as the domain is in its blacklist.&lt;/p&gt;

&lt;h3 id=&quot;generate-wireguard-client-config-file&quot;&gt;Generate Wireguard Client Config File&lt;/h3&gt;
&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bash wireguard-install.sh&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-wireguard-to-use-pi-hole-dns&quot;&gt;Configure Wireguard to use Pi-hole DNS&lt;/h3&gt;
&lt;p&gt;Edit your wireguard client conf file and update the DNS servers setting with Pi-hole internal address. In my case it is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.7.0.1&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;test-from-browser&quot;&gt;Test From Browser&lt;/h3&gt;
&lt;p&gt;After connecting to your VPN using Wireguard client. Go to this address &lt;a href=&quot;http://pagead2.googlesyndication.com&quot;&gt;http://pagead2.googlesyndication.com&lt;/a&gt;, if everything works correctly you will see this:&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/google-syndication.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/google-syndication.png&quot; alt=&quot;google syndication&quot; /&gt;
&lt;/picture&gt;

&lt;h3 id=&quot;pi-hole-statistics&quot;&gt;Pi-hole Statistics&lt;/h3&gt;
&lt;p&gt;You can go to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://pi.hole/admin&lt;/code&gt; once you are connected to the VPN and see some of Pi-hole’s stats. The result is mind-boggling. Almost half of my traffic is to serve ads.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/pi-hole-stats.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/pi-hole-stats.png&quot; alt=&quot;Pi-hole stats&quot; /&gt;
&lt;/picture&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Pi-hole is a good solution to fight against ads on the internet. You should give it a try. That said not all ads are bad. Some creators are reliant on ads as their source of income. If you have someone you support, consider whitelisting the ads for the good cause.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Nyr/wireguard-install&quot;&gt;https://github.com/Nyr/wireguard-install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;https://pi-hole.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">WireGuard® is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry. https://www.wireguard.com Introduction Follow up for my post How to host OpenVPN and Pi-hole on Ubuntu 18.04 VPS. This is a guide to set up wireguard + pi-hole for your own private ad blocking VPN. Installation Wireguard Setup Run these scripts: wget https://git.io/wireguard -O wireguard-install.sh &amp;amp;&amp;amp; bash wireguard-install.sh Follow this setup: Welcome to this WireGuard road warrior installer! I need to ask you a few questions before starting setup. You can use the default options and just press enter if you are ok with them. What IPv4 address should the WireGuard server use? 1) Your IPv4 address should show up here 2) other local IP IPv4 address [1]: 1 What port do you want WireGuard listening to? Port [51820]: 51820 Tell me a name for the first client. Client name [client]: client Which DNS do you want to use for this client? 1) Current system resolvers 2) 1.1.1.1 3) Google 4) OpenDNS 5) NTT 6) AdGuard DNS [1]: 2 We are ready to set up your WireGuard server now. Press any key to continue... Start Wireguard Wireguard should start automatically after you ran the script. If not you can check by systemctl status wg-quick@wg0.service Restart Wireguard services: systemctl restart wg-quick@wg0.service Pi-hole Setup Note down Wireguard’s IP: ip a show dev wg0 10.7.0.1/24 // note this address Note down your default gateway IP address: ip r | grep default default via XXX.XXX.XXX.XXX dev eth0 onlink // note this address Run this script: curl -sSL https://install.pi-hole.net | bash Follow the instruction to set up pi-hole: Installing dependencies The following step is important, make sure to select wg0 as the interface Choose the DNS provider Pi-hole will use. Choose the protocols available to you This following step is important, make sure to choose no so we can assign our internal address which is 10.7.0.1. Enter 10.7.0.1/24. This is the static address VPN will use to talk to Pi-hole Enter the ipv4-gateway you noted down There are a few more steps but I just choose the default settings. Test DNS settings Run this script host google.com 10.7.0.1 # Output from host google.com 10.7.0.1 google.com has address 172.217.0.46 google.com has IPv6 address 2607:f8b0:4005:80b::200e google.com mail is handled by 10 aspmx.l.google.com. google.com mail is handled by 20 alt1.aspmx.l.google.com. google.com mail is handled by 30 alt2.aspmx.l.google.com. google.com mail is handled by 40 alt3.aspmx.l.google.com. google.com mail is handled by 50 alt4.aspmx.l.google.com. Our Wireguard + Pi-hole still see google.com’s public IPs properly This time run host pagead2.googlesyndication.com # Output from host pagead2.googlesyndication.com pagead2.googlesyndication.com has address 0.0.0.0 pagead2.googlesyndication.com has IPv6 address :: pagead2.googlesyndication.com is an alias for pagead46.l.doubleclick.net. Pi-hole blocked pagead2.googlesyndication.com as the domain is in its blacklist. Generate Wireguard Client Config File Run bash wireguard-install.sh Configure Wireguard to use Pi-hole DNS Edit your wireguard client conf file and update the DNS servers setting with Pi-hole internal address. In my case it is 10.7.0.1 Test From Browser After connecting to your VPN using Wireguard client. Go to this address http://pagead2.googlesyndication.com, if everything works correctly you will see this: Pi-hole Statistics You can go to http://pi.hole/admin once you are connected to the VPN and see some of Pi-hole’s stats. The result is mind-boggling. Almost half of my traffic is to serve ads. Conclusion Pi-hole is a good solution to fight against ads on the internet. You should give it a try. That said not all ads are bad. Some creators are reliant on ads as their source of income. If you have someone you support, consider whitelisting the ads for the good cause. References https://github.com/Nyr/wireguard-install https://pi-hole.net/</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/openvpn-pihole.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/openvpn-pihole.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Donate Compute Power to Folding@Home to Find Cures For Covid-19</title><link href="https://jasonthai.me/blog/2020/03/14/donate-compute-power-to-foldinghome-to-cures-for-covid-19/" rel="alternate" type="text/html" title="Donate Compute Power to Folding@Home to Find Cures For Covid-19" /><published>2020-03-14T00:00:00+00:00</published><updated>2020-03-14T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/03/14/donate-compute-power-to-foldinghome-to-cures-for-covid-19</id><content type="html" xml:base="https://jasonthai.me/blog/2020/03/14/donate-compute-power-to-foldinghome-to-cures-for-covid-19/">&lt;p&gt;If you have not heard of Folding@Home, it is basically a software you can download to your computer and uses part of the computer power to help scientists run models and find cures for various diseases.&lt;/p&gt;

&lt;p&gt;I suggest you take a look at their website to learn more: &lt;a href=&quot;https://foldingathome.org/&quot;&gt;https://foldingathome.org/&lt;/a&gt;. Currently they are looking for more compute power to combat against Covid-19(20). Please help out however you can.&lt;/p&gt;</content><author><name>Jason Thai</name></author><category term="blog" /><category term="en" /><summary type="html">If you have not heard of Folding@Home, it is basically a software you can download to your computer and uses part of the computer power to help scientists run models and find cures for various diseases. I suggest you take a look at their website to learn more: https://foldingathome.org/. Currently they are looking for more compute power to combat against Covid-19(20). Please help out however you can.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/foldingathome.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/foldingathome.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Some Notes on Apache Spark Memory Management</title><link href="https://jasonthai.me/blog/2020/02/27/some-notes-on-apache-spark-memory-management/" rel="alternate" type="text/html" title="Some Notes on Apache Spark Memory Management" /><published>2020-02-27T00:00:00+00:00</published><updated>2020-02-27T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/02/27/some-notes-on-apache-spark-memory-management</id><content type="html" xml:base="https://jasonthai.me/blog/2020/02/27/some-notes-on-apache-spark-memory-management/">&lt;h2 id=&quot;important-configurations&quot;&gt;Important configurations:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.memory&lt;/span&gt; – Size of memory to use for each executor that runs the task.&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.cores&lt;/span&gt; – Number of virtual cores.&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.memory&lt;/span&gt; – Size of memory to use for the driver.&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.cores&lt;/span&gt; – Number of virtual cores to use for the driver.&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.instances&lt;/span&gt; – Number of executors. Set this parameter unless spark.dynamicAllocation.enabled is set to true.&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.default.parallelism&lt;/span&gt; – Default number of partitions in resilient distributed datasets (RDDs) returned by transformations like join, reduceByKey, and parallelize when no partition number is set by the user&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.sql.execution.arrow.enabled&lt;/span&gt; - Enable optimization for panda dataframe&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.files.ignoreCorruptFiles&lt;/span&gt; - Ignore corrupt files&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.sql.files.ignoreCorruptFiles&lt;/span&gt; - Ignore corrupt files&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.extraJavaOptions&lt;/span&gt; - Other Java options like garbage collection for executors&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.extraJavaOptions&lt;/span&gt; - Other Java options like garbage collection for drivers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sample-calculations&quot;&gt;Sample Calculations:&lt;/h2&gt;

&lt;p&gt;Consider an EMR cluster with 1 master - 25 slaves running c5.18xlarge instance. Each instance comes with 72vCPU, 144 GiB Memory.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.cores&lt;/span&gt; = number of virtual cores per executor. Recommendation is 5
    &lt;blockquote&gt;
      &lt;p&gt;spark.excutor.cores = 5&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Number of executors per instance = (total number of virtual cores per instance - 1)/ spark.executors.cores&lt;br /&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Number of executors per instance = (72 - 1) / 5 = 14&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;Total executor memory = total RAM per instance / number of executors per instance&lt;br /&gt;&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Total executor memory = 144 / 14 = 10 (round down)&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executors.memory&lt;/span&gt; = total executor memory * 0.9&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;spark.executors.memory = 10 * 0.9 = 9g&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.memoryOverhead&lt;/span&gt; = total executor memory * 0.10
    &lt;blockquote&gt;
      &lt;p&gt;spark.excutor.memoryOverhead = 10 * 0.1 = 1g&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.memory&lt;/span&gt; = spark.executors.memory
    &lt;blockquote&gt;
      &lt;p&gt;spark.driver.memory = 9g&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.cores&lt;/span&gt;= spark.executors.cores
    &lt;blockquote&gt;
      &lt;p&gt;spark.driver.cores = 5&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.instances&lt;/span&gt; = (number of executors per instance * number of core instances) minus 1 for the driver
    &lt;blockquote&gt;
      &lt;p&gt;spark.executor.instances = 14 * 25 - 1 = 349&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.default.parallelism&lt;/span&gt; = spark.executor.instances * spark.executors.cores * 2
    &lt;blockquote&gt;
      &lt;p&gt;spark.default.parallelism = 349 * 5 * 2 = 3490&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.executor.extraJavaOptions&lt;/span&gt;
    &lt;blockquote&gt;
      &lt;p&gt;spark.executor.extraJavaOptions = -XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:+G1SummarizeConcMark -XX:InitiatingHeapOccupancyPercent=35 -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:OnOutOfMemoryError=’kill -9 %p’&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: darkred&quot;&gt;spark.driver.extraJavaOptions&lt;/span&gt;
    &lt;blockquote&gt;
      &lt;p&gt;spark.executor.extraJavaOptions = -XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:+G1SummarizeConcMark -XX:InitiatingHeapOccupancyPercent=35 -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:OnOutOfMemoryError=’kill -9 %p’&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/big-data/best-practices-for-successfully-managing-memory-for-apache-spark-applications-on-amazon-emr/&quot;&gt;https://aws.amazon.com/blogs/big-data/best-practices-for-successfully-managing-memory-for-apache-spark-applications-on-amazon-emr/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spark.apache.org/docs/latest/sql-pyspark-pandas-with-arrow.html&quot;&gt;https://spark.apache.org/docs/latest/sql-pyspark-pandas-with-arrow.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">Important configurations: spark.executor.memory – Size of memory to use for each executor that runs the task. spark.executor.cores – Number of virtual cores. spark.driver.memory – Size of memory to use for the driver. spark.driver.cores – Number of virtual cores to use for the driver. spark.executor.instances – Number of executors. Set this parameter unless spark.dynamicAllocation.enabled is set to true. spark.default.parallelism – Default number of partitions in resilient distributed datasets (RDDs) returned by transformations like join, reduceByKey, and parallelize when no partition number is set by the user spark.sql.execution.arrow.enabled - Enable optimization for panda dataframe spark.files.ignoreCorruptFiles - Ignore corrupt files spark.sql.files.ignoreCorruptFiles - Ignore corrupt files spark.executor.extraJavaOptions - Other Java options like garbage collection for executors spark.driver.extraJavaOptions - Other Java options like garbage collection for drivers Sample Calculations: Consider an EMR cluster with 1 master - 25 slaves running c5.18xlarge instance. Each instance comes with 72vCPU, 144 GiB Memory. spark.executor.cores = number of virtual cores per executor. Recommendation is 5 spark.excutor.cores = 5 Number of executors per instance = (total number of virtual cores per instance - 1)/ spark.executors.cores Number of executors per instance = (72 - 1) / 5 = 14 Total executor memory = total RAM per instance / number of executors per instance Total executor memory = 144 / 14 = 10 (round down) spark.executors.memory = total executor memory * 0.9 spark.executors.memory = 10 * 0.9 = 9g spark.executor.memoryOverhead = total executor memory * 0.10 spark.excutor.memoryOverhead = 10 * 0.1 = 1g spark.driver.memory = spark.executors.memory spark.driver.memory = 9g spark.driver.cores= spark.executors.cores spark.driver.cores = 5 spark.executor.instances = (number of executors per instance * number of core instances) minus 1 for the driver spark.executor.instances = 14 * 25 - 1 = 349 spark.default.parallelism = spark.executor.instances * spark.executors.cores * 2 spark.default.parallelism = 349 * 5 * 2 = 3490 spark.executor.extraJavaOptions spark.executor.extraJavaOptions = -XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:+G1SummarizeConcMark -XX:InitiatingHeapOccupancyPercent=35 -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:OnOutOfMemoryError=’kill -9 %p’ spark.driver.extraJavaOptions spark.executor.extraJavaOptions = -XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:+G1SummarizeConcMark -XX:InitiatingHeapOccupancyPercent=35 -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:OnOutOfMemoryError=’kill -9 %p’ Sources: https://aws.amazon.com/blogs/big-data/best-practices-for-successfully-managing-memory-for-apache-spark-applications-on-amazon-emr/ https://spark.apache.org/docs/latest/sql-pyspark-pandas-with-arrow.html</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/spark.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/spark.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Better SSH Keys Management with AuthorizedKeysCommand</title><link href="https://jasonthai.me/blog/2020/02/19/better-ssh-keys-management-with-authorizedkeyscommand/" rel="alternate" type="text/html" title="Better SSH Keys Management with AuthorizedKeysCommand" /><published>2020-02-19T00:00:00+00:00</published><updated>2020-02-19T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/02/19/better-ssh-keys-management-with-authorizedkeyscommand</id><content type="html" xml:base="https://jasonthai.me/blog/2020/02/19/better-ssh-keys-management-with-authorizedkeyscommand/">&lt;p&gt;I usually use authorized_key files to store SSH public keys in order to access my servers . However once I start to have multiple servers, I realize manually managing SSH keys is nightmare.&lt;/p&gt;

&lt;p&gt;Recently I found out a better way to manage these SSH keys
In /etc/ssh/sshd_config file there are 2 configurations:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AuthorizedKeysCommand /keys.sh
AuthorizedKeysCommandUser nobody
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can use &lt;strong&gt;AuthorizedKeysCommand&lt;/strong&gt; to point to an script that returns all the SSH keys. In this case, my script is:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
curl https://raw.githubusercontent.com/jasontthai/keys/master/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Name this file &lt;code class=&quot;highlighter-rouge&quot;&gt;key.sh&lt;/code&gt; and make it executable: &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod a+x /keys.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The public keys are stored in a Github repo which can be updated any time. The structure of the repo is this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keys/
├── user1
├── user2
├── user3
└── user4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I login with  user1, the server will get user1’s public keys from Github and validates it agaisnt user1’s private key.&lt;/p&gt;

&lt;p&gt;There are a few problems with this approach:  I rely on an external service to retrieve the public keys. If Github goes offline, I will be unable to login to my servers at all. This also adds latency to the login step as we need to retrieve the keys over the internet. So I should think about some caching mechanism in case this happens.&lt;/p&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">I usually use authorized_key files to store SSH public keys in order to access my servers . However once I start to have multiple servers, I realize manually managing SSH keys is nightmare. Recently I found out a better way to manage these SSH keys In /etc/ssh/sshd_config file there are 2 configurations: AuthorizedKeysCommand /keys.sh AuthorizedKeysCommandUser nobody We can use AuthorizedKeysCommand to point to an script that returns all the SSH keys. In this case, my script is: #!/bin/bash curl https://raw.githubusercontent.com/jasontthai/keys/master/$1 Name this file key.sh and make it executable: chmod a+x /keys.sh The public keys are stored in a Github repo which can be updated any time. The structure of the repo is this: keys/ ├── user1 ├── user2 ├── user3 └── user4 When I login with user1, the server will get user1’s public keys from Github and validates it agaisnt user1’s private key. There are a few problems with this approach: I rely on an external service to retrieve the public keys. If Github goes offline, I will be unable to login to my servers at all. This also adds latency to the login step as we need to retrieve the keys over the internet. So I should think about some caching mechanism in case this happens.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/ssh.jpg" /><media:content medium="image" url="https://jasonthai.me/assets/img/ssh.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Setup Shell Script for Linux-based Servers</title><link href="https://jasonthai.me/blog/2020/02/12/setup-shell-script-for-linux-based-servers/" rel="alternate" type="text/html" title="Setup Shell Script for Linux-based Servers" /><published>2020-02-12T00:00:00+00:00</published><updated>2020-02-12T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/02/12/setup-shell-script-for-linux-based-servers</id><content type="html" xml:base="https://jasonthai.me/blog/2020/02/12/setup-shell-script-for-linux-based-servers/">&lt;p&gt;Since I have a few Linux servers that are running RHEL, Debian or Ubuntu OS, I want to have an automatic and convenient way to quickly set up and get them running.  Specifically I want to do a the following things for a fresh server:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade the server’s packages to the latest version&lt;/li&gt;
  &lt;li&gt;Install essential packages such as: fail2ban, ufw, htop, apache2, docker, etc.&lt;/li&gt;
  &lt;li&gt;Create new user with sudo access&lt;/li&gt;
  &lt;li&gt;Disable root login and password authentication in favor of SSH keys&lt;/li&gt;
  &lt;li&gt;Ability to install other packages if required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that in mind, I created a simple setup script which you can find here: &lt;a href=&quot;https://github.com/jasontthai/shell-scripts&quot;&gt;https://github.com/jasontthai/shell-scripts&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;running-the-script&quot;&gt;Running the Script&lt;/h3&gt;
&lt;p&gt;To run the script manually with prompt so you can decide what the script does:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -L json.id/setup.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To run the script in automatic mode without prompt except for adding new user:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -L json.id/setup.sh | sudo bash -s -- -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;example-of-output&quot;&gt;Example of output&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; json.id/setup.sh | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash
&lt;span class=&quot;c&quot;&gt;# ## ## ## ## ## ## ## ## ## ## ## ## #&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#           VPS Setup Script          #&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ## ## ## ## ## ## ## ## ## ## ## ## #&lt;/span&gt;

Wed 12 Feb 2020 03:56:01 PM PST
Updating system...

Installing Basic Packages: &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ufw fail2ban htop curl apache2

Add Sudo User? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Disable Root Login? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Disable Password Authentication? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Install Docker? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Install Docker Compose? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Enter your TIMEZONE &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Empty to skip]:
Enter any other packages to be installed &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Empty to skip]:

Setting &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;user...
Username: testuser
Password:

Adding SSH Keys
Enter SSH Key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Empty to skip]:

Disabling Root Login...

Disabling Password Authentication...

Docker Installed. Added testuser to docker group

Docker Compose Installed.

Finished setup script.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or to view help&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; json.id/setup.sh | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ## ## ## ## ## ## ## ## ## ## ## ## #&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#           VPS Setup Script          #&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ## ## ## ## ## ## ## ## ## ## ## ## #&lt;/span&gt;

Wed 12 Feb 2020 04:04:07 PM PST

Usage: ./setup.sh &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-mh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
       curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; json.id/setup.sh | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash
       curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; json.id/setup.sh | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ah&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

Flags:
       &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; : run setup script automatically
       &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; : prints this lovely message, &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;exits
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">Since I have a few Linux servers that are running RHEL, Debian or Ubuntu OS, I want to have an automatic and convenient way to quickly set up and get them running. Specifically I want to do a the following things for a fresh server: Upgrade the server’s packages to the latest version Install essential packages such as: fail2ban, ufw, htop, apache2, docker, etc. Create new user with sudo access Disable root login and password authentication in favor of SSH keys Ability to install other packages if required With that in mind, I created a simple setup script which you can find here: https://github.com/jasontthai/shell-scripts Running the Script To run the script manually with prompt so you can decide what the script does: curl -L json.id/setup.sh | sudo bash To run the script in automatic mode without prompt except for adding new user: curl -L json.id/setup.sh | sudo bash -s -- -a Example of output curl -sL json.id/setup.sh | sudo bash # ## ## ## ## ## ## ## ## ## ## ## ## # # VPS Setup Script # # ## ## ## ## ## ## ## ## ## ## ## ## # Wed 12 Feb 2020 03:56:01 PM PST Updating system... Installing Basic Packages: sudo ufw fail2ban htop curl apache2 Add Sudo User? [y/N]: y Disable Root Login? [y/N]: y Disable Password Authentication? [y/N]: y Install Docker? [y/N]: y Install Docker Compose? [y/N]: y Enter your TIMEZONE [Empty to skip]: Enter any other packages to be installed [Empty to skip]: Setting sudo user... Username: testuser Password: Adding SSH Keys Enter SSH Key [Empty to skip]: Disabling Root Login... Disabling Password Authentication... Docker Installed. Added testuser to docker group Docker Compose Installed. Finished setup script. or to view help curl -sL json.id/setup.sh | sudo bash -s -- -h # ## ## ## ## ## ## ## ## ## ## ## ## # # VPS Setup Script # # ## ## ## ## ## ## ## ## ## ## ## ## # Wed 12 Feb 2020 04:04:07 PM PST Usage: ./setup.sh [-mh] curl -sL json.id/setup.sh | sudo bash curl -sL json.id/setup.sh | sudo bash -s --{ah} Flags: -a : run setup script automatically -h : prints this lovely message, then exits</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/scripts.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/scripts.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Free Public xBrowserSync Service</title><link href="https://jasonthai.me/blog/2020/01/03/free-public-xbrowsersync-service/" rel="alternate" type="text/html" title="Free Public xBrowserSync Service" /><published>2020-01-03T00:00:00+00:00</published><updated>2020-01-03T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2020/01/03/free-public-xbrowsersync-service</id><content type="html" xml:base="https://jasonthai.me/blog/2020/01/03/free-public-xbrowsersync-service/">&lt;p&gt;TL;DR: My xbrowsersync service API can be accessed through: &lt;a href=&quot;https://xbrowsersync.jasonthai.me&quot;&gt;https://xbrowsersync.jasonthai.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before using xBrowserSync, I do not have a good way of consolidating all my bookmarks. xBrowserSync helps me sync all my bookmarks across different browsers like Chrome, Firefox, Brave, etc.&lt;/p&gt;

&lt;p&gt;After you have downloaded the &lt;a href=&quot;https://www.xbrowsersync.org/#download&quot;&gt;extension for your browser&lt;/a&gt;, you can either use the default provided xbrowsersync service or you can update to my service in the setting:&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/xbrowsersync-setting.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/xbrowsersync-setting.jpeg&quot; alt=&quot;xbrowsersync setting&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;From &lt;a href=&quot;https://xbrowsersync.org&quot;&gt;https://xbrowsersync.org&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;xBrowserSync is a free and open-source alternative to browser syncing tools offered by companies like Google, Firefox, Opera and others. The project was born out of a concern for the over-reliance on services provided by big tech, who collect as much personal data as they can and have demonstrated that they do not respect their user’s privacy . Now, with the proliferation of open-source code and projects it’s easier than ever to create tools and services that allow users to take back control of their data!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;

  &lt;p&gt;xBrowserSync respects your privacy and gives you complete anonymity. No sign up is required and no personal data is ever collected. To start syncing simply download xBrowserSync for your desktop browser or mobile platform, enter an encryption password and click Create New Sync! You’ll receive an anonymous sync ID which identifies your data and can be used to access your data on other browsers and devices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;

  &lt;p&gt;xBrowserSync does not only sync but also enhances your productivity by enriching your native browser bookmarks with the addition of descriptions and tags, and an intuitive search interface enables you to find, modify and share bookmarks quickly and easily. xBrowserSync even adds descriptions and tags to new bookmarks for you automatically. And don’t ever worry about losing your data thanks to the included back up and restore functionality.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;

  &lt;p&gt;The xBrowserSync desktop browser web extension syncs your browser data between desktop browsers. It works with the browser’s native bookmarking features so you can keep using the native tools whilst always staying in sync. If you like to organise your bookmarks into folders don’t worry, xBrowserSync respects your bookmark hierarchy and syncs it across your browsers.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">TL;DR: My xbrowsersync service API can be accessed through: https://xbrowsersync.jasonthai.me Before using xBrowserSync, I do not have a good way of consolidating all my bookmarks. xBrowserSync helps me sync all my bookmarks across different browsers like Chrome, Firefox, Brave, etc. After you have downloaded the extension for your browser, you can either use the default provided xbrowsersync service or you can update to my service in the setting: From https://xbrowsersync.org: xBrowserSync is a free and open-source alternative to browser syncing tools offered by companies like Google, Firefox, Opera and others. The project was born out of a concern for the over-reliance on services provided by big tech, who collect as much personal data as they can and have demonstrated that they do not respect their user’s privacy . Now, with the proliferation of open-source code and projects it’s easier than ever to create tools and services that allow users to take back control of their data! xBrowserSync respects your privacy and gives you complete anonymity. No sign up is required and no personal data is ever collected. To start syncing simply download xBrowserSync for your desktop browser or mobile platform, enter an encryption password and click Create New Sync! You’ll receive an anonymous sync ID which identifies your data and can be used to access your data on other browsers and devices. xBrowserSync does not only sync but also enhances your productivity by enriching your native browser bookmarks with the addition of descriptions and tags, and an intuitive search interface enables you to find, modify and share bookmarks quickly and easily. xBrowserSync even adds descriptions and tags to new bookmarks for you automatically. And don’t ever worry about losing your data thanks to the included back up and restore functionality. The xBrowserSync desktop browser web extension syncs your browser data between desktop browsers. It works with the browser’s native bookmarking features so you can keep using the native tools whilst always staying in sync. If you like to organise your bookmarks into folders don’t worry, xBrowserSync respects your bookmark hierarchy and syncs it across your browsers.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/xbrowsersync.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/xbrowsersync.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">December List of Selfhosted Apps</title><link href="https://jasonthai.me/blog/2019/12/26/december-list-of-selfhosted-apps/" rel="alternate" type="text/html" title="December List of Selfhosted Apps" /><published>2019-12-26T00:00:00+00:00</published><updated>2019-12-26T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2019/12/26/december-list-of-selfhosted-apps</id><content type="html" xml:base="https://jasonthai.me/blog/2019/12/26/december-list-of-selfhosted-apps/">&lt;p&gt;This is probably the last post of December 2019. I wish everyone has had a good year so far and an exciting 2020.&lt;/p&gt;

&lt;p&gt;I have been playing around with selfhosting some more and here is the list of apps I am currently hosting:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.portainer.io&quot;&gt;Portainer&lt;/a&gt; - Docker management system&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://heimdall.site&quot;&gt;Heimdall&lt;/a&gt; - Application dashboard&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plex.tv&quot;&gt;Plex&lt;/a&gt; - Media management system&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tautulli.com&quot;&gt;Tautulli&lt;/a&gt; - Plex media server monitoring&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ombi.io&quot;&gt;Ombi&lt;/a&gt; - Request movies &amp;amp; TV for plex users&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt; - Productivity platform and more&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitwarden.com&quot;&gt;Bitwarden&lt;/a&gt; - Password manager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Current server providers I am using:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://terrahost.no&quot;&gt;TerraHost&lt;/a&gt; - Dedicated server for media streaming&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hetzner.com&quot;&gt;Hetzner&lt;/a&gt; - Dedicated server for media streaming&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://smarthost.com&quot;&gt;Smarthost&lt;/a&gt; - VPS for selfhosted apps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hosthatch.com&quot;&gt;Hosthatch&lt;/a&gt; - Storage VPS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ionswitch.com&quot;&gt;IonSwitch&lt;/a&gt; - VPS for my blog&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://buyvm.net&quot;&gt;Buyvm&lt;/a&gt; - VPS for VPN&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://php-friends.de&quot;&gt;PHP-Friends&lt;/a&gt; - VPS for selfhosted apps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://letbox.com&quot;&gt;Letbox&lt;/a&gt; - Storage VPS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://inceptionhosting.com&quot;&gt;InceptionHosting&lt;/a&gt; - VPS for VPN&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hostsolutions.ro&quot;&gt;Hostsolutions&lt;/a&gt; - Storage VPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tools I am using to monitor servers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hetrixtools.com&quot;&gt;HetrixTools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BotoX/ServerStatus&quot;&gt;ServerStatus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Server forums I am checking:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lowendtalk.com&quot;&gt;LowendTalk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://talk.lowendspirit.com&quot;&gt;LowendSpirit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to contact me if you are interested in knowing more about these selfhosted apps. Cheers!&lt;/p&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">This is probably the last post of December 2019. I wish everyone has had a good year so far and an exciting 2020. I have been playing around with selfhosting some more and here is the list of apps I am currently hosting: Portainer - Docker management system Heimdall - Application dashboard Plex - Media management system Tautulli - Plex media server monitoring Ombi - Request movies &amp;amp; TV for plex users Nextcloud - Productivity platform and more Bitwarden - Password manager Current server providers I am using: TerraHost - Dedicated server for media streaming Hetzner - Dedicated server for media streaming Smarthost - VPS for selfhosted apps Hosthatch - Storage VPS IonSwitch - VPS for my blog Buyvm - VPS for VPN PHP-Friends - VPS for selfhosted apps Letbox - Storage VPS InceptionHosting - VPS for VPN Hostsolutions - Storage VPS Tools I am using to monitor servers: HetrixTools ServerStatus Server forums I am checking: LowendTalk LowendSpirit Feel free to contact me if you are interested in knowing more about these selfhosted apps. Cheers!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/cloud-server.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/cloud-server.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Deploy Nextcloud With Docker Compose in Ubuntu 18.04</title><link href="https://jasonthai.me/blog/2019/11/03/deploy-nextcloud-with-docker-compose/" rel="alternate" type="text/html" title="Deploy Nextcloud With Docker Compose in Ubuntu 18.04" /><published>2019-11-03T00:00:00+00:00</published><updated>2019-11-03T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2019/11/03/deploy-nextcloud-with-docker-compose</id><content type="html" xml:base="https://jasonthai.me/blog/2019/11/03/deploy-nextcloud-with-docker-compose/">&lt;p&gt;In one of the previous posts, I mentioned using &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; as a self-hosted cloud platform. This post goes into details how I set up my instance.&lt;/p&gt;

&lt;h2 id=&quot;install-docker-and-docker-compose&quot;&gt;Install Docker and Docker-Compose&lt;/h2&gt;
&lt;p&gt;To install docker, run:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To install docker-compose, run:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;docker-composeyml&quot;&gt;docker-compose.yml&lt;/h2&gt;
&lt;p&gt;Create this &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; with following contents:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3'&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--transaction-isolation=READ-COMMITTED --binlog-format=ROW&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/nextcloud-db:/var/lib/mysql&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD=ENTER MYSQL PASSWORD&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD=ENTER MYSQL PASSWORD&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE=nextcloud&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER=nextcloud&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis:alpine&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nextcloud:apache&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8080:80&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;REDIS_HOST=redis&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/nextcloud-data:/var/www/html&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nextcloud:apache&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/nextcloud-data:/var/www/html&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;entrypoint&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/cron.sh&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose -f docker-compose.yml up -d&lt;/code&gt; to start all necessary containers.&lt;/p&gt;

&lt;h2 id=&quot;setting-up&quot;&gt;Setting Up&lt;/h2&gt;

&lt;p&gt;Browse to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080&lt;/code&gt; and you’ll see a set up page like this:&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/nextcloud-setup.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/nextcloud-setup.png&quot; alt=&quot;Setup&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;Fill in the fills as the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Database user: nextcloud&lt;/li&gt;
  &lt;li&gt;Database password: Enter your password in &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Database name: nextcloud&lt;/li&gt;
  &lt;li&gt;Database host: db&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After setting up nextcloud, you will see something like:&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/nextcloud.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/nextcloud.jpeg&quot; alt=&quot;Nextcloud&quot; /&gt;
&lt;/picture&gt;

&lt;h2 id=&quot;modify-overwrite-protocal&quot;&gt;Modify Overwrite Protocal&lt;/h2&gt;
&lt;p&gt;Modify &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/nextcloud-data/config/config.php&lt;/code&gt; and add:&lt;/p&gt;
&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'overwriteprotocol'&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;modify-upload-max-filesize&quot;&gt;Modify Upload Max Filesize&lt;/h2&gt;
&lt;p&gt;By default, Nextcloud only allows uploading file up to 2MB which is not very useful. We can modify the max filesize by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/nextcloud-data/.htaccess&lt;/code&gt; with following:&lt;/p&gt;
&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;&lt;span class=&quot;n&quot;&gt;IfModule&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod_php7&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&amp;gt;
...
&lt;span class=&quot;n&quot;&gt;php_value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upload_max_filesize&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;php_value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_max_size&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;
&amp;lt;/&lt;span class=&quot;n&quot;&gt;IfModule&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jason Thai</name></author><category term="tech" /><category term="en" /><summary type="html">In one of the previous posts, I mentioned using Nextcloud as a self-hosted cloud platform. This post goes into details how I set up my instance. Install Docker and Docker-Compose To install docker, run: curl -fsSL https://get.docker.com -o get-docker.sh sh get-docker.sh To install docker-compose, run: sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose.yml Create this docker-compose.yml with following contents: version: '3' services: db: image: mariadb command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW restart: always volumes: - /opt/nextcloud-db:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=ENTER MYSQL PASSWORD - MYSQL_PASSWORD=ENTER MYSQL PASSWORD - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud redis: image: redis:alpine restart: always app: image: nextcloud:apache ports: - 8080:80 environment: - REDIS_HOST=redis depends_on: - db - redis volumes: - /opt/nextcloud-data:/var/www/html restart: always cron: image: nextcloud:apache restart: always volumes: - /opt/nextcloud-data:/var/www/html entrypoint: /cron.sh depends_on: - db - redis Run docker-compose -f docker-compose.yml up -d to start all necessary containers. Setting Up Browse to http://localhost:8080 and you’ll see a set up page like this: Fill in the fills as the following: Database user: nextcloud Database password: Enter your password in docker-compose.yml file Database name: nextcloud Database host: db After setting up nextcloud, you will see something like: Modify Overwrite Protocal Modify /opt/nextcloud-data/config/config.php and add: 'overwriteprotocol' =&amp;gt; 'https', Modify Upload Max Filesize By default, Nextcloud only allows uploading file up to 2MB which is not very useful. We can modify the max filesize by adding /opt/nextcloud-data/.htaccess with following: &amp;lt;IfModule mod_php7.c&amp;gt; ... php_value upload_max_filesize 16G php_value post_max_size 16G &amp;lt;/IfModule&amp;gt;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/NextcloudLogo.png" /><media:content medium="image" url="https://jasonthai.me/assets/img/NextcloudLogo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">What I’m up to in September 2019</title><link href="https://jasonthai.me/blog/2019/10/07/what-im-up-to-in-september-2019/" rel="alternate" type="text/html" title="What I'm up to in September 2019" /><published>2019-10-07T00:00:00+00:00</published><updated>2019-10-07T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2019/10/07/what-im-up-to-in-september-2019</id><content type="html" xml:base="https://jasonthai.me/blog/2019/10/07/what-im-up-to-in-september-2019/">&lt;p&gt;Vy finally came back after doing internship in Hanoi. It has a brief yet long 3 months for us. We also moved in the new apartment and although it took a while, we reached to a point where everything was set up. We bought a new dining table, 2 chairs, a new bed and some other kitchen items. We did a lot of things together for the first time too like baking. Vy and I managed to successfully bake a coffee cake. We also decided to eat at home more and I started cooking a bit.&lt;/p&gt;

&lt;p&gt;We spent quite a bit of money during this month as the cost of moving and buying things for the new place. As a result, I skipped one cycle of investing. Hopefully this will resume this coming month of October.&lt;/p&gt;

&lt;p&gt;I did not run so much in September and my legs are getting itchy. Hopefully I’ll run again soon in the new area.&lt;/p&gt;

&lt;p&gt;This upcoming month of October is the &lt;a href=&quot;https://www.dhs.gov/national-cyber-security-awareness-month&quot;&gt;Cybersecurity Awareness Month&lt;/a&gt;, please spend sometime going over your online presence, updating your passwords. That’s all folks.&lt;/p&gt;</content><author><name>Jason Thai</name></author><category term="blog" /><category term="en" /><summary type="html">Vy finally came back after doing internship in Hanoi. It has a brief yet long 3 months for us. We also moved in the new apartment and although it took a while, we reached to a point where everything was set up. We bought a new dining table, 2 chairs, a new bed and some other kitchen items. We did a lot of things together for the first time too like baking. Vy and I managed to successfully bake a coffee cake. We also decided to eat at home more and I started cooking a bit. We spent quite a bit of money during this month as the cost of moving and buying things for the new place. As a result, I skipped one cycle of investing. Hopefully this will resume this coming month of October. I did not run so much in September and my legs are getting itchy. Hopefully I’ll run again soon in the new area. This upcoming month of October is the Cybersecurity Awareness Month, please spend sometime going over your online presence, updating your passwords. That’s all folks.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/the-month-september.jpg" /><media:content medium="image" url="https://jasonthai.me/assets/img/the-month-september.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">What I’m up to in August 2019</title><link href="https://jasonthai.me/blog/2019/09/01/what-im-up-to-in-august-2019/" rel="alternate" type="text/html" title="What I'm up to in August 2019" /><published>2019-09-01T00:00:00+00:00</published><updated>2019-09-01T00:00:00+00:00</updated><id>https://jasonthai.me/blog/2019/09/01/what-im-up-to-in-august-2019</id><content type="html" xml:base="https://jasonthai.me/blog/2019/09/01/what-im-up-to-in-august-2019/">&lt;picture&gt;
    &lt;source srcset=&quot;https://jasonthai.me/assets/img/month-of-august.webp&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img class=&quot;db ml-auto mr-auto&quot; src=&quot;https://jasonthai.me/assets/img/month-of-august.jpg&quot; alt=&quot;August&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This month has been busy. I have been learning more about self-hosting software and doing some tinkering with them.&lt;/p&gt;

&lt;p&gt;Currently I am checking out these 2 subreddits:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://reddit.com/r/selfhosted&quot;&gt;https://reddit.com/r/selfhosted&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://reddit.com/r/homelab&quot;&gt;https://reddit.com/r/homelab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These subs give me some motivation of creating my home server to store data and share with families and friends. But that will be the next step as I am using a cloud provider to do my hosting.&lt;/p&gt;

&lt;p&gt;What I am hosting:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitwarden.com&quot;&gt;Bitwarden&lt;/a&gt; - Opensource password manager. I decided to delete my Lastpass’s account and use a self-hosted Bitwarden instance to manage my passwords. So far so good. I keep my data.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt; - Productivity platform (Gsuite replacement). I use this to sync my files across computers. The platform offers a lot more than just file syncing. I haven’t explored much but it looks promising. Another file syncing alternative is &lt;a href=&quot;https://seafile.com&quot;&gt;Seafile&lt;/a&gt; which people say is more reliable.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plex.tv&quot;&gt;Plex&lt;/a&gt; - Media organizer. I am also exploring hosting my media so I can view them everywhere. Another popular alternative is &lt;a href=&quot;https://github.com/jellyfin/jellyfin&quot;&gt;Jellyfin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tt-rss.org&quot;&gt;TT-RSS&lt;/a&gt; - RSS feeds&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://firefly-iii.org/&quot;&gt;Firefly-III&lt;/a&gt; - Budget app. I am also trying out this budget app. It is quite different from my &lt;a href=&quot;https://www.youneedabudget.com/&quot;&gt;YNAB&lt;/a&gt; and needs taking used too. So far I am more pleased with the latter one.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to try out these services, let me know and I can give you access to them.&lt;/p&gt;

&lt;p&gt;Moving on…
I am still reading about finance this month. They are easy to understand and are a nice complement to the ones I read in July. I highly recommend these books.&lt;/p&gt;

&lt;style type=&quot;text/css&quot; media=&quot;screen&quot;&gt;
  .gr_custom_container_1567354622 {
    /* customize your Goodreads widget container here*/
    border: 1px solid gray;
    border-radius:10px;
    padding: 10px 5px 10px 5px;
    background-color: #FFFFFF;
    color: #000000;
    width: 300px
  }
  .gr_custom_header_1567354622 {
    /* customize your Goodreads header here*/
    border-bottom: 1px solid gray;
    width: 100%;
    margin-bottom: 5px;
    text-align: center;
    font-size: 120%
  }
  .gr_custom_each_container_1567354622 {
    /* customize each individual book container here */
    width: 100%;
    clear: both;
    margin-bottom: 10px;
    overflow: auto;
    padding-bottom: 4px;
    border-bottom: 1px solid #aaa;
  }
  .gr_custom_book_container_1567354622 {
    /* customize your book covers here */
    overflow: hidden;
    height: 60px;
      float: left;
      margin-right: 4px;
      width: 39px;
  }
  .gr_custom_author_1567354622 {
    /* customize your author names here */
    font-size: 10px;
  }
  .gr_custom_tags_1567354622 {
    /* customize your tags here */
    font-size: 10px;
    color: gray;
  }
  .gr_custom_rating_1567354622 {
    /* customize your rating stars here */
    float: right;
  }
&lt;/style&gt;

&lt;div align=&quot;center&quot; id=&quot;gr_custom_widget_1567354622&quot;&gt;
          &lt;div class=&quot;gr_custom_container_1567354622&quot;&gt;
    &lt;h2 class=&quot;gr_custom_header_1567354622&quot;&gt;
    &lt;a style=&quot;text-decoration: none;&quot; rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/review/list/54938708-jason-thai?shelf=august-2019&amp;amp;utm_medium=api&amp;amp;utm_source=custom_widget&quot;&gt;Jason&amp;#39;s bookshelf: august-2019&lt;/a&gt;
    &lt;/h2&gt;
      &lt;div class=&quot;gr_custom_each_container_1567354622&quot;&gt;
          &lt;div class=&quot;gr_custom_book_container_1567354622&quot;&gt;
            &lt;a title=&quot;The Bogleheads' Guide to Investing&quot; rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/review/show/2960404866?utm_medium=api&amp;amp;utm_source=custom_widget&quot;&gt;&lt;img alt=&quot;The Bogleheads' Guide to Investing&quot; border=&quot;0&quot; src=&quot;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1388380454l/381355._SY75_.jpg&quot; /&gt;&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_rating_1567354622&quot;&gt;
            &lt;span class=&quot; staticStars notranslate&quot;&gt;&lt;img src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;/span&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_title_1567354622&quot;&gt;
            &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/review/show/2960404866?utm_medium=api&amp;amp;utm_source=custom_widget&quot;&gt;The Bogleheads' Guide to Investing&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_author_1567354622&quot;&gt;
            by &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/author/show/66008.Taylor_Larimore&quot;&gt;Taylor Larimore&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_tags_1567354622&quot;&gt;
            tagged:
            august-2019
          &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;gr_custom_each_container_1567354622&quot;&gt;
          &lt;div class=&quot;gr_custom_book_container_1567354622&quot;&gt;
            &lt;a title=&quot;The Bogleheads' Guide to the Three-Fund Portfolio: How a Simple Portfolio of Three Total Market Index Funds Outperforms Most Investors with Less Risk&quot; rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/review/show/2960405014?utm_medium=api&amp;amp;utm_source=custom_widget&quot;&gt;&lt;img alt=&quot;The Bogleheads' Guide to the Three-Fund Portfolio: How a Simple Portfolio of Three Total Market Index Funds Outperforms Most Investors with Less Risk&quot; border=&quot;0&quot; src=&quot;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1528428190l/36809342._SY75_.jpg&quot; /&gt;&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_rating_1567354622&quot;&gt;
            &lt;span class=&quot; staticStars notranslate&quot;&gt;&lt;img src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.goodreads.com/images/layout/gr_red_star_inactive.png&quot; /&gt;&lt;/span&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_title_1567354622&quot;&gt;
            &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/review/show/2960405014?utm_medium=api&amp;amp;utm_source=custom_widget&quot;&gt;The Bogleheads' Guide to the Three-Fund Portfolio: How a Simple Portfolio of Three Total Market Index Funds Outperforms Most Investors with Less Risk&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_author_1567354622&quot;&gt;
            by &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/author/show/66008.Taylor_Larimore&quot;&gt;Taylor Larimore&lt;/a&gt;
          &lt;/div&gt;
          &lt;div class=&quot;gr_custom_tags_1567354622&quot;&gt;
            tagged:
            august-2019
          &lt;/div&gt;
      &lt;/div&gt;
  &lt;br style=&quot;clear: both&quot; /&gt;
  &lt;center&gt;
    &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/&quot;&gt;&lt;img alt=&quot;goodreads.com&quot; style=&quot;border:0&quot; src=&quot;https://www.goodreads.com/images/widget/widget_logo.gif&quot; /&gt;&lt;/a&gt;
  &lt;/center&gt;
  &lt;noscript&gt;
    Share &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/&quot;&gt;book reviews&lt;/a&gt; and ratings with Jason, and even join a &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.goodreads.com/group&quot;&gt;book club&lt;/a&gt; on Goodreads.
  &lt;/noscript&gt;
  &lt;/div&gt;

      &lt;/div&gt;
&lt;script src=&quot;https://www.goodreads.com/review/custom_widget/54938708.Jason's%20bookshelf:%20august-2019?cover_position=left&amp;amp;cover_size=small&amp;amp;num_books=5&amp;amp;order=a&amp;amp;shelf=august-2019&amp;amp;show_author=1&amp;amp;show_cover=1&amp;amp;show_rating=1&amp;amp;show_review=1&amp;amp;show_tags=1&amp;amp;show_title=1&amp;amp;sort=date_added&amp;amp;widget_bg_color=FFFFFF&amp;amp;widget_bg_transparent=&amp;amp;widget_border_width=1&amp;amp;widget_id=1567354622&amp;amp;widget_text_color=000000&amp;amp;widget_title_size=medium&amp;amp;widget_width=medium&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Finally the biggest news, I am moving this upcoming September! I have been living at my current place for over four years. It suits well for a bachelor who is living alone. Now Vy is here with me, I want us to live someplace bigger and more comfortable. So it is exciting to move yet it is a little bit bittersweet as the current landlords are very nice people. Anyway, looking forward to the new place!&lt;/p&gt;</content><author><name>Jason Thai</name></author><category term="blog" /><category term="en" /><summary type="html">This month has been busy. I have been learning more about self-hosting software and doing some tinkering with them. Currently I am checking out these 2 subreddits: https://reddit.com/r/selfhosted https://reddit.com/r/homelab These subs give me some motivation of creating my home server to store data and share with families and friends. But that will be the next step as I am using a cloud provider to do my hosting. What I am hosting: Bitwarden - Opensource password manager. I decided to delete my Lastpass’s account and use a self-hosted Bitwarden instance to manage my passwords. So far so good. I keep my data. Nextcloud - Productivity platform (Gsuite replacement). I use this to sync my files across computers. The platform offers a lot more than just file syncing. I haven’t explored much but it looks promising. Another file syncing alternative is Seafile which people say is more reliable. Plex - Media organizer. I am also exploring hosting my media so I can view them everywhere. Another popular alternative is Jellyfin TT-RSS - RSS feeds Firefly-III - Budget app. I am also trying out this budget app. It is quite different from my YNAB and needs taking used too. So far I am more pleased with the latter one. If you want to try out these services, let me know and I can give you access to them. Moving on… I am still reading about finance this month. They are easy to understand and are a nice complement to the ones I read in July. I highly recommend these books. Jason&amp;#39;s bookshelf: august-2019 The Bogleheads' Guide to Investing by Taylor Larimore tagged: august-2019 The Bogleheads' Guide to the Three-Fund Portfolio: How a Simple Portfolio of Three Total Market Index Funds Outperforms Most Investors with Less Risk by Taylor Larimore tagged: august-2019 Share book reviews and ratings with Jason, and even join a book club on Goodreads. Finally the biggest news, I am moving this upcoming September! I have been living at my current place for over four years. It suits well for a bachelor who is living alone. Now Vy is here with me, I want us to live someplace bigger and more comfortable. So it is exciting to move yet it is a little bit bittersweet as the current landlords are very nice people. Anyway, looking forward to the new place!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://jasonthai.me/assets/img/month-of-august.jpg" /><media:content medium="image" url="https://jasonthai.me/assets/img/month-of-august.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>